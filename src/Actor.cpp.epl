
#ifdef HEADER

struct Actor {
	virtual uint32 id () = 0;
	virtual CStr name () = 0;
	virtual void act () = 0;
	virtual void react () = 0;
	virtual void draw () = 0;
	virtual void serialize (Serializer* s) = 0;
	virtual ~Actor () { }
};

<% print cwd, "\n"; %>
<% my @actorfiles = sort glob "../tmp/actor/*.cpp"; %>

<% for (@actorfiles) {
%>#include "$_"
<% } %>

typedef Actor* (* actor_maker ) ();
actor_maker make_actor [<%= 0+@actorfiles %>] = {
<% for (@actorfiles) {
	$_ =~ /^\.\.\/tmp\/actor\/(\d+)-(\w+)\.cpp/ or die "Error: Malformed actor file name: $_\n";
	%>	[](){ return (Actor*)new $2; },
<% } %>};

#else

void serialize_actorp (Serializer* s, Actor*& a) {
	if (s->writing()) {
		uint id = a->id();
		s->ser(id);
	}
	else {
		uint id;
		s->ser(id);
		a = make_actor[id]();
	}
}

<% for (@actorfiles) {
%>#include "<%= $_ %>"
<% } %>

#endif



